		Admin hooks
		$this->loader->add_action( 'add_meta_boxes', $plugin_admin, 'add_forum_metabox_to_post_types' );

		$this->loader->add_action( 'save_post_sfwd-courses', $plugin_admin, 'save_ld_forum_metabox_data' );
		$this->loader->add_action( 'save_post_sfwd-lessons', $plugin_admin, 'save_ld_forum_metabox_data' );
		$this->loader->add_action( 'save_post_sfwd-topic', $plugin_admin, 'save_ld_forum_metabox_data' );

		add_shortcode('forum_link', array($plugin_admin, 'forum_link_shortcode'));

	Admin class 
	public function add_forum_metabox_to_post_types()
	{
		$post_types = array('sfwd-courses', 'sfwd-lessons', 'sfwd-topic');

		add_meta_box(
			'ld-forum-metabox',
			__('Forums', 'forum-plugin'),
			array($this, 'ld_forum_metabox_callback'),
			$post_types,
			'side'
		);
	}

	// Callback function to display the meta box
	public function ld_forum_metabox_callback($post)
	{
		// Get the current value of the forum meta field
		$current_forum = get_post_meta($post->ID, '_forum', true);

		// Output the select element with options for all forums
		echo '<label for="forum">Select a forum:</label><br>';
		echo '<select style="width : 90%" name="forum" id="forum">';
		echo '<option value="">Select</option>';

		$forums = get_posts(array(
			'post_type' => 'forum',
			'posts_per_page' => -1,  //To get all forums
		));

		foreach ($forums as $forum) {
			echo '<option value="' . $forum->ID . '" ' . selected($current_forum, $forum->ID) . '>' . $forum->post_title . '</option>';
		}
		echo '</select>';
	}

	// Save the meta box data
	public function save_ld_forum_metabox_data($post_id)
	{
		if (isset($_POST['forum'])) {
			update_post_meta($post_id, '_forum', absint($_POST['forum']));
		} else {
			delete_post_meta($post_id, '_forum');
		}
	}

	public function forum_link_shortcode($attr)
	{
		//To retrieve post id of current post
		$post_id = get_the_ID();


		//Forum id of forum associated with current post
		$forum_id = get_post_meta($post_id, '_forum', true);


		if (is_numeric($forum_id) &&  ($forum_id > 0)) {

			//To retrieve the permalink of forum
			$permalink = bbp_get_forum_permalink($forum_id);

			if (!empty($permalink)) {
				// To Retrieve the forum details using the forum ID
				$forum = bbp_get_forum($forum_id);

				return 'Forum : ' . '<a href="' . $permalink . '">' .  $forum->post_title . '</a>';
			} else {
				return 'Forum : No forum available.';
			}
		} else {
			return 'Forum : No forum available.';
		}
	}


Public hooks
		$this->loader->add_filter( 'the_content', $plugin_public, 'show_forum_link' );
		
Public function
public function show_forum_link($content){
		return $content.do_shortcode('[forum_link]');
	}

